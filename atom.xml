<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>电光石火</title>
  
  <subtitle>阿迪的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://adi0229.github.io/"/>
  <updated>2019-07-05T03:25:46.050Z</updated>
  <id>https://adi0229.github.io/</id>
  
  <author>
    <name>Jerry Huang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>AI编剧续写《老友记》-- 基于 GPT2 开源版</title>
    <link href="https://adi0229.github.io/2019/06/27/2019-06-27-gpt2-friends/"/>
    <id>https://adi0229.github.io/2019/06/27/2019-06-27-gpt2-friends/</id>
    <published>2019-06-27T02:45:34.000Z</published>
    <updated>2019-07-05T03:25:46.050Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2019-06"><a href="#2019-06" class="headerlink" title="2019-06"></a>2019-06</h2><h4 id="6-27"><a href="#6-27" class="headerlink" title="6.27"></a>6.27</h4><p>引子：“Like, you guys all have job? ”</p><p><img src="https://upload-images.jianshu.io/upload_images/452087-90f85681b021d0b2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><ul><li>大萧条时代再度降临？大家都失业了，Ross的在职朋友，也是异类。</li><li>原本斯文的博士Ross，变得古怪–大呼小叫，次日飞往佛蒙特州，参加某个免费的活动？</li><li>Rachel 捧着一束花，以祝贺 Joey。Joey 谦虚回答，这很容易啦，去书店。Rachel 接话，拿起“她”的书就好啦。her book 指的是谁的书呢？</li></ul><h4 id="6-28"><a href="#6-28" class="headerlink" title="6.28"></a>6.28</h4><p><img src="https://upload-images.jianshu.io/upload_images/452087-a6d77cedc8f15064.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><ul><li>盼星星，盼月亮，盼周末？Chandler厌倦了整天面对数字的日常工作？奇怪的是，钱德勒不适应快言快语？其实，在真实剧集中，钱德勒妙语连珠，常开冷笑话。</li><li>Rachel 带了音乐专辑？记得某一集里，大家讨论 Kiss 接吻，Rachel 建议“Word of advice: Bring back the comedian.Or next time you’ll find yourself listening to that album alone” Rachel出现在音乐专辑封面？她跨界玩音乐了？客串嘉宾？MV 女主角？</li><li>奇怪的场景：Rachel观赏鸭子游泳，Joey在帮忙划水？ - - </li></ul><p>（AI 写手，还真的是脑洞大开啊，还写得快。）</p><h4 id="6-29"><a href="#6-29" class="headerlink" title="6.29"></a>6.29</h4><p><img src="https://upload-images.jianshu.io/upload_images/452087-a645767f0e36d0b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>续写上集「鸭子游泳」</p><ul><li>鸭子在水桶里戏水。Rachel又和意大利人约会，叫 Pete。</li><li>Joey 出场，带着巨型陶瓷杯，对比之下，Rachel 拿着小啤酒杯，里头是巧克力摩丝。双方互相吐槽，Rachel 笑话 Joey：“你不懂给陶瓷杯加热”，Joey 反击：“你都没做过这事。”</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/452087-5a05451c93824e83.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>续写上集的一句话「瑞秋拿着啤酒杯回来了」-&gt; “Rachel returns carrying a beer mug”</p><ul><li>Phoebe和 Monica 争吵，因为 Phoebe 带朋友的孩子来玩，但是孩子走丢了。于是，她想离开 Central Perk&amp;老伙计们。Monica 反应激烈，在浴室哭泣，“砰砰砰”，摔门而出。</li><li>GPT2写手对电视剧里的「广告插播」这一套路，是了然于胸，他写道“Commercial Break”，接着就是广告回来的 Scene：四个家伙在抢盘子。</li></ul><p>进化中的AI 写手，在「内隐化」-&gt; 「戏剧化冲突」这一故事内核？</p><h2 id="2019-07"><a href="#2019-07" class="headerlink" title="2019-07"></a>2019-07</h2><h4 id="7-1"><a href="#7-1" class="headerlink" title="7.1"></a>7.1</h4><p><img src="https://upload-images.jianshu.io/upload_images/452087-d4c42a224c517b6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>四人抢夺盘子之后……</p><ul><li>Chandler幽默嘲讽Rachel：“一个人吃完整个小麦面包，挺难的。”</li><li>Rachel转头对Monica说：“你是职业大厨，应该给咱们大家庭全部供餐。”</li><li>Monica毫不领情：“等等，只有一个顾客。”指的是自己只给老公Chandler一人做菜？</li><li>Ross温情帮腔：“Rachel是我妻子，我给她做菜吧。但是我不擅长做菜，姐姐你得帮我。”</li></ul><p>简短对话，无厘头风延续 -&gt; GPT2写手，了然于胸-&gt; Rachel 是 Ross 妻子。</p><h4 id="7-2"><a href="#7-2" class="headerlink" title="7.2"></a>7.2</h4><p><img src="https://upload-images.jianshu.io/upload_images/452087-36f8e84bdbe682ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><ul><li>这个GPT2-Friends 写手，喜欢转移场景，它续写人类句子，很少对「灵感激活句」扩展，只是一笔带过。比如，Monica 是职业大厨，她空余时间，就爱清理地板。（嗯，AI 写手知道 Monica 的洁癖）而关于Monica 在哪做厨师，擅长什么菜，做菜有何特别之处？没有写出。</li><li>场景依然围绕「饮食」展开，比如，免费开胃菜（free appetizer）、牛排(steak), 出现新人物 -&gt; 慈善女孩（Charity Girl)， 话题围绕的是慈善女孩的梦境 -&gt; 在梦里，她是国王，而中国武士集合列队(assembled china people)，守护着她。</li></ul><h4 id="7-3"><a href="#7-3" class="headerlink" title="7.3"></a>7.3</h4><p><img src="https://upload-images.jianshu.io/upload_images/452087-0de8a2cb0ad4e484.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><ul><li>Monica厨娘风范尽显，回家做甜饼，是给 Chandler 准备？第一集开场时，Chandler说过一句：“Cookie？”，他爱吃甜饼。</li><li>奇葩事情，Rachel 从 Monica 手中夺过电话，然后递给 Monica？似乎 GPT2-Friends 写手对「人物概念关系」还不太熟悉。 </li></ul><h4 id="7-4"><a href="#7-4" class="headerlink" title="7.4"></a>7.4</h4><p><img src="https://upload-images.jianshu.io/upload_images/452087-fbb4eda230af9c3d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><ul><li>场景：Monica与某个男人调情。他试着抚慰她，与此同时，在电话一端，她跟 Rachel抱怨：“我的脸颊疼疯了。” Rachel打趣道：“你可以把你的不爽，发泄到他身上啊。”最后，那个男人很满意，他说第三次约会很赞。（这让我联想到了某一集里，Monica 跟红酒先生Paul说的，“So there will be a fifth date.”）</li><li>场景：月之舞餐厅。（这个场景定位，学得惟妙惟肖。）Joey 的约会对象 Emily 想让他越说越多。故意闲扯了各种让人紧张得竖起耳朵的话，“要不，我告诉 Phoebe，我怀孕了，我们有小孩了。”“哈哈，别紧张，开玩笑哒。”“你知道吗？有些事我没告诉你，我爸爸曾是色情明星，你们一周能看一次。”Joey 这一回学乖了，盯着背景，有来有回的 -&gt; “得了吧，你说的是我吧。”这段话有启发，张力十足，狗血剧情。</li></ul><h4 id="7-5"><a href="#7-5" class="headerlink" title="7.5"></a>7.5</h4><p><img src="https://upload-images.jianshu.io/upload_images/452087-45321d6c3ce00ce2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>“What’s your problem？”（根据近日著名的泼水事件得到启发的句子。）</p><p>GPT2-Friends 写手，续写了一个少男少女式对话，Joey 和 Alice，关于吉他练习，关于吃醋和分手。</p><ul><li>Joey 勾搭上了另一个叫 Alice 的女孩，她想要 Joey 的华丽吉他，彻夜弹奏它。同时，她吃醋，逼着 Joey跟Emily 分手。Joey 安抚她，说自己正在赶走 Emily。Joey 太坏了，跟正剧里一样，有「一吨前女友」。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;2019-06&quot;&gt;&lt;a href=&quot;#2019-06&quot; class=&quot;headerlink&quot; title=&quot;2019-06&quot;&gt;&lt;/a&gt;2019-06&lt;/h2&gt;&lt;h4 id=&quot;6-27&quot;&gt;&lt;a href=&quot;#6-27&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="AI" scheme="https://adi0229.github.io/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>2018 世界杯 -&gt; 看数据，猜全场最佳球员？机器学习可解释性 -&gt; 特征重要性</title>
    <link href="https://adi0229.github.io/2019/06/24/2019-06-24-fifa18eda/"/>
    <id>https://adi0229.github.io/2019/06/24/2019-06-24-fifa18eda/</id>
    <published>2019-06-24T09:08:20.114Z</published>
    <updated>2019-06-24T09:16:48.272Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/452087-ad8d8d0c9e5f04ec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>2018 男足世界杯（128 场比赛）基本统计信息</p><p>完整数据分析报告：<a href="https://github.com/adi0229/ML-DL/blob/master/fifa2018.ipynb" target="_blank" rel="external">https://github.com/adi0229/ML-DL/blob/master/fifa2018.ipynb</a></p><h3 id="数据特征包含："><a href="#数据特征包含：" class="headerlink" title="数据特征包含："></a>数据特征包含：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Index([&apos;Date&apos;, &apos;Team&apos;, &apos;Opponent&apos;, &apos;Goal Scored&apos;, &apos;Ball Possession %&apos;,</div><div class="line">       &apos;Attempts&apos;, &apos;On-Target&apos;, &apos;Off-Target&apos;, &apos;Blocked&apos;, &apos;Corners&apos;, &apos;Offsides&apos;,</div><div class="line">       &apos;Free Kicks&apos;, &apos;Saves&apos;, &apos;Pass Accuracy %&apos;, &apos;Passes&apos;,</div><div class="line">       &apos;Distance Covered (Kms)&apos;, &apos;Fouls Committed&apos;, &apos;Yellow Card&apos;,</div><div class="line">       &apos;Yellow &amp; Red&apos;, &apos;Red&apos;, &apos;Man of the Match&apos;, &apos;1st Goal&apos;, &apos;Round&apos;, &apos;PSO&apos;,</div><div class="line">       &apos;Goals in PSO&apos;, &apos;Own goals&apos;, &apos;Own goal Time&apos;],</div><div class="line">      dtype=&apos;object&apos;)</div></pre></td></tr></table></figure><h3 id="随机森林分类器（Baseline）及特征重要性"><a href="#随机森林分类器（Baseline）及特征重要性" class="headerlink" title="随机森林分类器（Baseline）及特征重要性"></a>随机森林分类器（Baseline）及特征重要性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">import numpy as np</div><div class="line">import pandas as pd</div><div class="line">from sklearn.model_selection import train_test_split</div><div class="line">from sklearn.ensemble import RandomForestClassifier</div><div class="line"></div><div class="line"></div><div class="line">data = pd.read_csv(path + &apos;FIFA_2018_Statistics.csv&apos;)</div><div class="line"></div><div class="line">y = (data[&apos;Man of the Match&apos;] == &quot;Yes&quot;)  </div><div class="line"></div><div class="line"># 特征工程 -&gt; 选取numerical类数值作为训练特征</div><div class="line"></div><div class="line">feature_names = [i for i in data.columns if data[i].dtype in [np.int64]]</div><div class="line"></div><div class="line">X = data[feature_names]</div><div class="line"></div><div class="line">train_X, val_X, train_y, val_y = train_test_split(X, y, random_state=1)</div><div class="line"></div><div class="line">rf = RandomForestClassifier(random_state=0).fit(train_X, train_y)</div><div class="line"></div><div class="line">from sklearn.metrics import accuracy_score</div><div class="line"></div><div class="line">predictions = rf.predict(val_X)</div><div class="line">print(&quot;accuracy_score: &quot; + str(accuracy_score(predictions, val_y)))</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">accuracy_score: 0.59375</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">import eli5</div><div class="line">from eli5.sklearn import PermutationImportance</div><div class="line"></div><div class="line">perm = PermutationImportance(rf, random_state=1).fit(val_X, val_y)</div><div class="line">eli5.show_weights(perm, feature_names = val_X.columns.tolist())</div></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/452087-837533ba4cf64c76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h3 id="随机森林分类器（微调）及特征重要性变化"><a href="#随机森林分类器（微调）及特征重要性变化" class="headerlink" title="随机森林分类器（微调）及特征重要性变化"></a>随机森林分类器（微调）及特征重要性变化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">rf = RandomForestClassifier(random_state=0,n_estimators=500).fit(train_X, train_y)</div><div class="line"></div><div class="line">predictions = rf.predict(val_X)</div><div class="line">print(&quot;accuracy_score: &quot; + str(accuracy_score(predictions, val_y)))</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">accuracy_score: 0.71875</div></pre></td></tr></table></figure><p>分析：「随机森林」准确率（60% - 72%）提升之后</p><ul><li><p>扑救、传球准确率、射门命中率的重要性上升</p></li><li><p>角球、全场跑动距离的重要性下降</p><p>符合足球战术常识</p></li></ul><h3 id="Xgboost-分类器（微调）及特征重要性"><a href="#Xgboost-分类器（微调）及特征重要性" class="headerlink" title="Xgboost 分类器（微调）及特征重要性"></a>Xgboost 分类器（微调）及特征重要性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">from xgboost import XGBRFClassifier</div><div class="line"></div><div class="line">xgb = XGBRFClassifier(silent=False, </div><div class="line">                      scale_pos_weight=1,</div><div class="line">                      learning_rate=0.01,  </div><div class="line">                      colsample_bytree = 0.4,</div><div class="line">                      subsample = 0.8, </div><div class="line">                      n_estimators=1000, </div><div class="line">                      reg_alpha = 0.3,</div><div class="line">                      max_depth=4, </div><div class="line">                      gamma=10).fit(train_X, train_y)</div><div class="line"></div><div class="line">predictions = xgb.predict(val_X)</div><div class="line">print(&quot;accuracy_score: &quot; + str(accuracy_score(predictions, val_y)))</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">accuracy_score: 0.71875</div></pre></td></tr></table></figure><p>Xgboost发现进球是唯一重要特征。<br>简单粗暴，也更符合足球常理。进球多，更容易获胜，获胜一方容易出 MVP 球员。其他数据的关系并不大。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">perm_xgb = PermutationImportance(xgb, random_state=1).fit(val_X, val_y)</div><div class="line">eli5.show_weights(perm_xgb, feature_names = val_X.columns.tolist())</div></pre></td></tr></table></figure></p><p><img src="https://upload-images.jianshu.io/upload_images/452087-e34d1c02dcd6787f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>特征重要性（Permutation Importance）</p><p>Ref: <a href="https://eli5.readthedocs.io/en/latest/blackbox/permutation_importance.html?highlight=PermutationImportance" target="_blank" rel="external">https://eli5.readthedocs.io/en/latest/blackbox/permutation_importance.html?highlight=PermutationImportance</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/452087-ad8d8d0c9e5f04ec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; 
      
    
    </summary>
    
    
      <category term="技术, 机器学习" scheme="https://adi0229.github.io/tags/%E6%8A%80%E6%9C%AF-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>百事可乐 Or 可口可乐？深度学习图片分类器部署</title>
    <link href="https://adi0229.github.io/2019/06/18/2019-06-24-cola-image-clf/"/>
    <id>https://adi0229.github.io/2019/06/18/2019-06-24-cola-image-clf/</id>
    <published>2019-06-18T04:23:12.000Z</published>
    <updated>2019-06-24T09:38:57.557Z</updated>
    
    <content type="html"><![CDATA[<p>简单的可乐图片分类器 Web 部署，根据 fastai MOOC 2019 版制作。</p><p>URL 地址：<a href="https://adi-pic.onrender.com/" target="_blank" rel="external">https://adi-pic.onrender.com/</a></p><p><img src="https://upload-images.jianshu.io/upload_images/452087-3b757a8ab88b172a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="百事可乐"></p><p><img src="https://upload-images.jianshu.io/upload_images/452087-17499fdd67485562.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="可口可乐"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简单的可乐图片分类器 Web 部署，根据 fastai MOOC 2019 版制作。&lt;/p&gt;
&lt;p&gt;URL 地址：&lt;a href=&quot;https://adi-pic.onrender.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://a
      
    
    </summary>
    
    
      <category term="AI" scheme="https://adi0229.github.io/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>在Google Colab 中显示Plotly</title>
    <link href="https://adi0229.github.io/2019/04/10/2019-04-10-plotlycolab/"/>
    <id>https://adi0229.github.io/2019/04/10/2019-04-10-plotlycolab/</id>
    <published>2019-04-10T14:42:57.000Z</published>
    <updated>2019-04-10T14:42:54.460Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在-Google-Colab-中显示-Plotly"><a href="#在-Google-Colab-中显示-Plotly" class="headerlink" title="在 Google Colab 中显示 Plotly"></a>在 Google Colab 中显示 Plotly</h1><h2 id="Python绘图可视化工具包-Plotly"><a href="#Python绘图可视化工具包-Plotly" class="headerlink" title="Python绘图可视化工具包-Plotly"></a>Python绘图可视化工具包-Plotly</h2><p>Plotly 能够绘制交互式的数据可视化图表，提供印刷品质的图表图片。</p><p> 近日，笔者在 colab 上使用 Plotly，遇到了一个小坑，需要运行特定函数，才能在 colab 上显示 Plotly 的交互图表。</p><p>解决代码分享：</p><p><a href="https://colab.research.google.com/drive/14oudHx5e5r7hm1QcbZ24FVHXgVPD0k8f" target="_blank" rel="external">Plotly in Colab.ipynb</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">import plotly.plotly as py</div><div class="line">from plotly.offline import init_notebook_mode, iplot</div><div class="line"></div><div class="line"></div><div class="line">def configure_plotly_browser_state():</div><div class="line">  import IPython</div><div class="line">  display(IPython.core.display.HTML(&apos;&apos;&apos;</div><div class="line">        &lt;script src=&quot;/static/components/requirejs/require.js&quot;&gt;&lt;/script&gt;</div><div class="line">        &lt;script&gt;</div><div class="line">          requirejs.config(&#123;</div><div class="line">            paths: &#123;</div><div class="line">              base: &apos;/static/base&apos;,</div><div class="line">              plotly: &apos;https://cdn.plot.ly/plotly-latest.min.js?noext&apos;,</div><div class="line">            &#125;,</div><div class="line">          &#125;);</div><div class="line">        &lt;/script&gt;</div><div class="line">        &apos;&apos;&apos;))</div><div class="line"></div><div class="line">configure_plotly_browser_state()</div><div class="line">init_notebook_mode(connected=False)</div></pre></td></tr></table></figure><h1 id="changelog"><a href="#changelog" class="headerlink" title="changelog"></a>changelog</h1><p>2019.04.10 init</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;在-Google-Colab-中显示-Plotly&quot;&gt;&lt;a href=&quot;#在-Google-Colab-中显示-Plotly&quot; class=&quot;headerlink&quot; title=&quot;在 Google Colab 中显示 Plotly&quot;&gt;&lt;/a&gt;在 Google Co
      
    
    </summary>
    
    
      <category term="技术" scheme="https://adi0229.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Python新手练习-PyBite</title>
    <link href="https://adi0229.github.io/2019/03/02/2019-03-02-pybite/"/>
    <id>https://adi0229.github.io/2019/03/02/2019-03-02-pybite/</id>
    <published>2019-03-02T04:47:11.000Z</published>
    <updated>2019-07-04T14:13:55.238Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Python新手练习-PyBite"><a href="#Python新手练习-PyBite" class="headerlink" title="Python新手练习-PyBite"></a>Python新手练习-PyBite</h2><h4 id="Bite-108-循环历遍可命名元祖计算总分-Loop-over-a-dict-of-namedtuples-calculating-a-total-score"><a href="#Bite-108-循环历遍可命名元祖计算总分-Loop-over-a-dict-of-namedtuples-calculating-a-total-score" class="headerlink" title="Bite 108 循环历遍可命名元祖计算总分(Loop over a dict of namedtuples calculating a total score)"></a>Bite 108 循环历遍可命名元祖计算总分(Loop over a dict of namedtuples calculating a total score)</h4><blockquote><p>有一个字典，字典中包含了不同颜色的pybite忍者腰带奖章，以及对应的分数及获得人数。需要构建一个函数，计算python所有忍者的总得分。</p></blockquote><p>知识点：</p><ul><li><code>collection</code> 的 <code>nametuple</code></li><li>列表推导式</li></ul><p>代码块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">from collections import namedtuple</div><div class="line"></div><div class="line">BeltStats = namedtuple(&apos;BeltStats&apos;, &apos;score ninjas&apos;)</div><div class="line"></div><div class="line">ninja_belts = &#123;&apos;yellow&apos;: BeltStats(50, 11),</div><div class="line">               &apos;orange&apos;: BeltStats(100, 7),</div><div class="line">               &apos;green&apos;: BeltStats(175, 1),</div><div class="line">               &apos;blue&apos;: BeltStats(250, 5)&#125;</div><div class="line"></div><div class="line"></div><div class="line">def get_total_points(belts=ninja_belts):</div><div class="line">    &quot;&quot;&quot;Calculate the amount of points rewarded on PyBites given the</div><div class="line">       ninja_belts dictionary, formula: belt score x belt owners (aka ninjas)</div><div class="line">       (of course there are more points but let&apos;s keep it simple)</div><div class="line"></div><div class="line">       Make your code generic so if we update ninja_belts to include</div><div class="line">       more belts (which we do in the tests) it will still work.</div><div class="line"></div><div class="line">       Ah and you can get score and ninjas from the namedtuple with nice</div><div class="line">       attribute access: belt.score / belt.ninjas (reason why we get</div><div class="line">       you familiar with namedtuple here, because we love them and use</div><div class="line">       them all over the place!)</div><div class="line">       </div><div class="line">       Return the total number of points int from the function.&quot;&quot;&quot;</div><div class="line">       </div><div class="line">       total_points = 0</div><div class="line">    </div><div class="line">    for belt in belts.values():</div><div class="line">        scores = belt.score * belt.ninjas</div><div class="line">        total_points += scores</div><div class="line">    </div><div class="line">    return total_points</div></pre></td></tr></table></figure><p>列表推导式写法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">return sum([belt[0] * belt[1] for belt in belts.values()])</div></pre></td></tr></table></figure><h4 id="Bite-109-健身字典查询及抛出异常-Workout-dict-lookups-and-raising-an-exception"><a href="#Bite-109-健身字典查询及抛出异常-Workout-dict-lookups-and-raising-an-exception" class="headerlink" title="Bite 109 健身字典查询及抛出异常(Workout dict lookups and raising an exception)"></a>Bite 109 健身字典查询及抛出异常(Workout dict lookups and raising an exception)</h4><blockquote><p>查询健身周计划的字典，并在日期输入键值错误时，抛出异常</p></blockquote><p>知识点：</p><ul><li>抛出异常 -&gt; <code>exception</code></li><li><code>format</code></li><li><code>title()</code></li></ul><p>代码块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">workout_schedule = &#123;&apos;Friday&apos;: &apos;Shoulders&apos;,</div><div class="line">                    &apos;Monday&apos;: &apos;Chest+biceps&apos;,</div><div class="line">                    &apos;Saturday&apos;: &apos;Rest&apos;,</div><div class="line">                    &apos;Sunday&apos;: &apos;Rest&apos;,</div><div class="line">                    &apos;Thursday&apos;: &apos;Legs&apos;,</div><div class="line">                    &apos;Tuesday&apos;: &apos;Back+triceps&apos;,</div><div class="line">                    &apos;Wednesday&apos;: &apos;Core&apos;&#125;</div><div class="line">rest, chill, go_train = &apos;Rest&apos;, &apos;Chill out!&apos;, &apos;Go train &#123;&#125;&apos;</div><div class="line"></div><div class="line"></div><div class="line">def get_workout_motd(day):</div><div class="line">    &quot;&quot;&quot;Title case passed in day argument (monday or MONDAY -&gt; Monday)</div><div class="line">       and check if it is in the given workout_schedule dict.</div><div class="line"></div><div class="line">       If it is there retrieve the workout, if not raise a KeyError.</div><div class="line"></div><div class="line">       Return the chill or go_train variable depending the retrieved</div><div class="line">       workout value (&apos;Rest&apos; or workout bla)</div><div class="line"></div><div class="line">       Trivia: /etc/motd is a file on Unix-like systems that contains</div><div class="line">       a &apos;message of the day&apos;&quot;&quot;&quot;</div><div class="line">    try:</div><div class="line">        workout = workout_schedule[day.title()]</div><div class="line">    except KeyError:</div><div class="line">        raise KeyError(&apos;Workout does not exist.&apos;)</div><div class="line">    return chill if workout == rest else go_train.format(workout)</div></pre></td></tr></table></figure><h1 id="changelog"><a href="#changelog" class="headerlink" title="changelog"></a>changelog</h1><p>2019.03.02 init pybite108<br>2019.03.05 update pybite109</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Python新手练习-PyBite&quot;&gt;&lt;a href=&quot;#Python新手练习-PyBite&quot; class=&quot;headerlink&quot; title=&quot;Python新手练习-PyBite&quot;&gt;&lt;/a&gt;Python新手练习-PyBite&lt;/h2&gt;&lt;h4 id=&quot;Bite-
      
    
    </summary>
    
    
      <category term="技术" scheme="https://adi0229.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>人生是选择的总和——读《畅销的原理》</title>
    <link href="https://adi0229.github.io/2019/01/17/2019-01-17-thebusinessofchoice/"/>
    <id>https://adi0229.github.io/2019/01/17/2019-01-17-thebusinessofchoice/</id>
    <published>2019-01-17T08:54:57.000Z</published>
    <updated>2019-04-02T13:52:56.997Z</updated>
    
    <content type="html"><![CDATA[<h1 id="人生的选择"><a href="#人生的选择" class="headerlink" title="人生的选择"></a>人生的选择</h1><p><img src="https://upload-images.jianshu.io/upload_images/452087-b0ed819b9b5b1643.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>在电影《罪与罚》结尾，艾迪-伍伦让剧中人物莱维教授说出了一句话：</p><blockquote><p>人生，事实上是选择的总和。——路易斯-莱维教授</p></blockquote><p>《畅销的原理》作者马修-威尔科克斯觉得，这句话“听上去似乎有点轻蔑，却是显而易见的事实。”</p><p>如果说，人生每一次选择，都是在面对分叉的道路，选择向左还是向右，那么，马修-威尔科克斯从30年前选择的广告公司入口，选择20年后在旧金山的商务策划，进而选择了与《选择的悖论》作者巴里-施瓦茨接触，最后，选择了写出《畅销的原理：为什么好观念、好产品会一炮而红？》。</p><h1 id="我们是消费者，还是选择者？"><a href="#我们是消费者，还是选择者？" class="headerlink" title="我们是消费者，还是选择者？"></a>我们是消费者，还是选择者？</h1><p>曾经，笔者一看到「营销」一词，想到西装革履的“直销”销售员在讲台上口吐横沫，把一个劣质无用的产品吹得天花乱坠，便会心生反感。后来，翻过大学教科书《市场营销》等书，脑海里的「营销」是销售人员巧舌如簧地安利商品，是公交站旁的贴着明星笑脸的广告牌。简而言之，营销是商业方面的市场推广和品牌管理等活动。在过去，这是我的营销常识。</p><p>对于「营销」是什么，马修-威尔科克斯给出反常识解读：<strong>营销是影响人们选择的过程。</strong></p><p>本书英文标题为《The Business of Choice:Marketing to Consumer’s Instincts》,顾名思义，书中强调的「营销思维」，指的是在商业领域中，<br>选择者面对汽车、保险、球鞋或者移动软件，他们特定的选择或许不同，但演化600万年而来的人类，他们都有着类似的大脑，都是用着类似的决策选择系统来思考。（消费者作者建议少用“消费者”一次，而是推荐“选择者”一词。）</p><p>原因如下：</p><ul><li>了解更宏大的背景，对于如何理解人们如何做出决策至关重要</li></ul><p>从行为科学的角度，他引述《影响力》作者西奥迪尼的观点：</p><blockquote><p>市场调研行业存在一个巨大的缺口，营销人员要更多地关注人类做出决策的一般规律，而不是只关心特定产品市场中对决策过程的理解。</p></blockquote><p>书中有一个例子，解释了为什么了解更宏大的背景，对于如何理解人们如何做出决策至关重要——对于「尾骨疼痛」这一疾病，普通医生只能从尾骨的医学性质来理解，但想不到从进化史来理解尾骨（人类和其他无尾灵长动物尾巴退化的遗迹），因此，无法理解整个环境、整个身体与尾骨的关系。</p><ul><li>选择耗费了人们生活中大量的时间</li></ul><p>2010年《经济学人》的一篇文章《你选择》显示:</p><blockquote><p>“根据食品市场营销协会的数据，如今美国普通超市就有超过 48,750 种商品，这一数字是 1975 年的五倍多。英国乐购超市出售 91 种不同的洗发水，93 个品种的牙膏，家用清洁剂品种的数量则达到 115。”</p></blockquote><ul><li>营销越来越复杂</li></ul><p>因为，在大数据时代，营销越来越复杂，数据海洋一波未平一波又起，冲刷到企业写字楼里。在2014年的大数据广告研究基金会上，作者即兴发言:</p><blockquote><p>“数据分析一半徒劳无功，但我不知道是哪一半。”</p></blockquote><p>这句话，对应了广告界的老谚语“广告奏效了一半，但我不知道是哪一半。”</p><p>下面摘录书中几个关于消费者选择的反常识案例：</p><h2 id="人们选择奢侈品的原因是什么？"><a href="#人们选择奢侈品的原因是什么？" class="headerlink" title="人们选择奢侈品的原因是什么？"></a>人们选择奢侈品的原因是什么？</h2><p>印象里，消费者总是容易这么想——那些陈列的装潢富丽堂皇的店铺里的奢侈品，比如爱马仕、迪奥和路易威登包包，人们购买他们，是因为他们做工精致，用料考究，设计奢华等等。”其实，根据书中所给的例子，在《Spent:Sex, Evolution, and Consumer Behavior》一书中，进化心理学家杰弗里-米勒写道（Geoffrey Miller）写道：“所有广告都有两种观众：潜在的产品买家和潜在的产品看客。产品看客会将各种想要的性状与产品联系起来。产品越昂贵、越独特，看客越多，买家越少。”他认为，奢侈品是性选择的标记。我们珍视美丽稀有的事物，代表想要别人珍视我们，这依赖于别人熟悉这些“标记”。所以，人们买奢侈品包包，不只是因为包包奢华无比，而是因为左邻右舍或者同事领导能认出来，“哇哦，你拿的是爱马仕的包哦。”</p><h2 id="为什么人们有时候选择随波逐流，有时候选择特立独行"><a href="#为什么人们有时候选择随波逐流，有时候选择特立独行" class="headerlink" title="为什么人们有时候选择随波逐流，有时候选择特立独行?"></a>为什么人们有时候选择随波逐流，有时候选择特立独行?</h2><p>在书中，作者引述《影响力》作者西奥迪尼讲了弗拉达的一个实验：观看赌城拉斯维加斯的旅游广告，一版强调流行，每年数百万人来。一版强调独特，去的人更加别出心裁。在观看广告之前，实验对象先看了库布里克心理惊悚片《闪灵》(The Shining)和浪漫爱情片《爱在黎明破晓前》（Before Sunrise）。观看过被试《闪灵》的，更喜欢强调流行的一版广告。观看过《爱在破晓黎明前》的被试更喜欢别出心裁的一版广告。这说明，人们有时从众，有时自我。电影能够激发观众的进化心理，如果观看了恐怖片，更偏向于引发自卫本能，此时观众更容易有从众心理。如果观看的是浪漫爱情片，会激发了求偶的本能，这时候，观众的心理更希望寻求独一无二的感觉。</p><h1 id="作者：马修·威尔科克斯"><a href="#作者：马修·威尔科克斯" class="headerlink" title="作者：马修·威尔科克斯"></a>作者：马修·威尔科克斯</h1><p><img src="https://upload-images.jianshu.io/upload_images/452087-5428f1d3b02fbf63.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Matthew Willcox"></p><blockquote><p>马修·威尔科克斯（Matthew Willcox），博达大桥广告公司（FCB）决策制定研究所的创立者和执行常委。博达大桥广告公司（FCB）是世界最早的广告公司之一，也是全球最早上市的广告公司之一，决策制定研究所是其中一个非常独特的机构，它把研究人类行为和人们如何做 选择的科学新发现拓展应用于市场营销实践中。马修在品牌战略领域已经有25年的从业经历，足迹遍布欧洲、亚洲和北美洲。他服务过李维斯、美国艺电、希尔顿酒店集团、联合利华、雀巢、壳牌和葛兰素史克等大企业。在马修的帮助下，这些企业的产品比以往更受消费者的喜爱。在这个过程中，他还为客户们赢得了8座艾菲奖（Effie）。马修还是美国食品和药品管理局的行为变化事务专家，经常在各大商学院和营销交流大会上做演讲。</p></blockquote><p>人容易对有着相同爱好的人有好感，作者威尔科克斯跟我一样，都是足球迷。他是爱尔兰人，在书中提到了他观看爱尔兰队对阵法国队的世界杯预选赛里亨利手球获利进球，而引发他呼吁各个足协协会让球员在赛前签字承诺，以借助“助推”影响球员公平竞赛行为。</p><h1 id="启示"><a href="#启示" class="headerlink" title="启示"></a>启示</h1><p>针对书中的营销建议，我列出了对应的术语概念：</p><ul><li>靠直觉还是靠分析？过滤信息才能高效决策。<br>「启发法」——选择者们常用直觉，而不是理性分析来做决策。</li><li>被人熟知还是保持距离？<br>「熟悉的扭曲」悖论——要持续吸引选择者，不仅需要维持熟悉度，更要有新奇与惊喜。</li><li>“曾经拥有的”带来损失的更大<br>「损失厌恶」——就像陈奕迅 Eson 唱的那样：“你的背包，背到现在还没烂，却成为我身体另一半。千金不换，它已熟悉我的汗。”</li><li>“给人们带去聪明、好看和幸运的感觉”<br>「自我效能」—— 让人们感觉到胜任感，他们会更乐意去做某事。</li></ul><h1 id="ChangeLog"><a href="#ChangeLog" class="headerlink" title="ChangeLog"></a>ChangeLog</h1><p>2019/01/16 初稿 2.5h<br>2019/04/02 删除封面图</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;人生的选择&quot;&gt;&lt;a href=&quot;#人生的选择&quot; class=&quot;headerlink&quot; title=&quot;人生的选择&quot;&gt;&lt;/a&gt;人生的选择&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/4
      
    
    </summary>
    
    
      <category term="运营" scheme="https://adi0229.github.io/tags/%E8%BF%90%E8%90%A5/"/>
    
  </entry>
  
  <entry>
    <title>队服撞衫？如何让AI区分相似球衣？</title>
    <link href="https://adi0229.github.io/2019/01/04/2019-01-04-aisimilarshirt/"/>
    <id>https://adi0229.github.io/2019/01/04/2019-01-04-aisimilarshirt/</id>
    <published>2019-01-04T04:44:23.000Z</published>
    <updated>2019-04-06T13:49:26.760Z</updated>
    
    <content type="html"><![CDATA[<p>#问题</p><p>笔者最近在学人工智能领域的深度学习技术，在 fast.ai的课程里，我学会了：复用简洁的示例代码来训练卷积神经网络CNN。它能够精准地让机器对图片进行分类。（课程里的例子是识别猫狗图片的二元分类任务，在2000张测试图片中，它的识别准确率达到了99%。）</p><p>我认为，真正的学习，是带着好奇心，自己来解决实际问题，探究输入-输出之间的关系，从而构建自己的知识体系。</p><p><strong>因为自己是多年的足球迷，从兴趣出发，我“凿开”了一个脑洞：能否训练一个卷积神经网络训练，识别区分两件相似足球队衣图片？</strong></p><p>于是，我搜索到了公众号点妹侃球的一篇帖子 <a href="https://kuaibao.qq.com/s/20180511G1NJ6N00?refer=spider" target="_blank" rel="external">《撞衫不可怕，谁丑谁尴尬！这些球衣相似度竟高达99％》</a>，看看都有哪些足球队的队服比较相似。</p><p>其中，我发现，大名鼎鼎的巴塞罗那队服是红蓝箭条衫，而瑞士巴赛尔队的队服也是红蓝箭条衫，两队的主场战袍相似度很高。因此，我打算用 fast.ai的模块来以及预训练的 CNN 卷积神经网络（比如，resnet34）来进行迁移学习，看看我们的 AI 图片分类器，能否较好地识别两个队的队服。</p><p>下面是两队的队服示例:</p><p><img src="http://inews.gtimg.com/newsapp_match/0/3549393347/0" alt="巴塞罗那队服"></p><p><img src="http://inews.gtimg.com/newsapp_match/0/3549393346/0" alt="巴塞尔队服"></p><p>任务定义：区分图片是「巴塞罗那队队服」还是「巴赛尔队队服」？</p><h1 id="数据集"><a href="#数据集" class="headerlink" title="数据集"></a>数据集</h1><ul><li>通过开源的 Python 脚本 <a href="https://github.com/hardikvasa/google-images-download" target="_blank" rel="external">google-images-download</a>，根据关键词来批量谷歌图片里的图像。每队批量下载了140张图片，训练集每队约83张图片，验证集每队约60张图片。</li></ul><h1 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h1><h3 id="预训练模型"><a href="#预训练模型" class="headerlink" title="预训练模型"></a>预训练模型</h3><p>定义数据路径及图片大小（324*324）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">PATH = &quot;./data/basel_or_barcelona/&quot;</div><div class="line">sz=324</div></pre></td></tr></table></figure></p><p>设置预训练模型为resnet34，然后生成模型，学习率设为0.01，并训练10次<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">arch=resnet34</div><div class="line">data = ImageClassifierData.from_paths(PATH, tfms=tfms_from_model(arch, sz)) </div><div class="line">learn = ConvLearner.pretrained(arch, data, precompute=True) </div><div class="line">learn.fit(0.01, 10)</div><div class="line"></div><div class="line">100% 10/10 [00:01&lt;00:00, 5.81it/s]</div><div class="line">epoch      trn_loss   val_loss   accuracy                </div><div class="line">    0      0.773914   0.711084   0.586777  </div><div class="line">    1      0.694298   0.670647   0.644628                </div><div class="line">    2      0.597124   0.62849    0.710744                </div><div class="line">    3      0.505373   0.600698   0.735537                </div><div class="line">    4      0.450973   0.583853   0.760331        </div><div class="line">    5      0.42152    0.595698   0.768595        </div><div class="line">    6      0.373794   0.610405   0.785124        </div><div class="line">    7      0.33496    0.624578   0.77686                 </div><div class="line">    8      0.304601   0.634755   0.77686         </div><div class="line">    9      0.277069   0.641988   0.77686</div></pre></td></tr></table></figure></p><p>采用预训练的模型，120多张的测试数据，准确率达到了77.6%，还不错。这是最简单的办法，fast.ai课程还讲授了其他的提示准确率的办法，对于这个小型的足球图片数据集，我来实验一下，看看准确率能否有明显提升。</p><h3 id="寻找最佳学习率"><a href="#寻找最佳学习率" class="headerlink" title="寻找最佳学习率"></a>寻找最佳学习率</h3><p><img src="https://upload-images.jianshu.io/upload_images/452087-1e9de08bc7ee725b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>使用了一个寻找最佳学习率的函数，但是数据图里是空的，没有曲线，暂时无解，先跳过，我决定沿用0.01的学习率。</p><h3 id="数据扩充（Data-Argumentation）"><a href="#数据扩充（Data-Argumentation）" class="headerlink" title="数据扩充（Data Argumentation）"></a>数据扩充（Data Argumentation）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tfms = tfms_from_model(resnet34, sz, aug_tfms=transforms_side_on, max_zoom=1.5)</div></pre></td></tr></table></figure><p>随机对图片进行水平旋转，并放大1.5倍</p><p><img src="https://upload-images.jianshu.io/upload_images/452087-2aba8a9bc2b3af4b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">data = ImageClassifierData.from_paths(PATH, tfms=tfms)</div><div class="line">learn = ConvLearner.pretrained(arch, data, precompute=True)</div><div class="line">learn.fit(1e-2, 1)</div></pre></td></tr></table></figure><p>用了 数据扩充（Data Argumentation） 之后，第一次训练，准确率较低，只有52.8%。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">learn.precompute=False</div><div class="line">learn.fit(1e-2, 3, cycle_len=1)</div><div class="line">epoch      trn_loss   val_loss   accuracy                </div><div class="line">    0      0.711067   0.799083   0.561983  </div><div class="line">    1      0.673241   0.670506   0.652893                </div><div class="line">    2      0.632643   0.606632   0.644628</div></pre></td></tr></table></figure><h1 id="解冻-微调"><a href="#解冻-微调" class="headerlink" title="解冻-微调"></a>解冻-微调</h1><p>之前训练的是最后一层，通过 Unfreeze函数,“解冻”所有神经层，进一步做 Fine-Tuning 参数微调，并且，不同深浅的神经层，采用不同的学习率。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line">learn.unfreeze()</div><div class="line">lr=np.array([1e-4,1e-3,1e-2])</div><div class="line">learn.fit(lr, 3, cycle_len=1, cycle_mult=2)</div><div class="line">epoch      trn_loss   val_loss   accuracy                </div><div class="line">    0      0.577406   0.585321   0.652893  </div><div class="line">    1      0.574191   0.495774   0.727273                </div><div class="line">    2      0.505914   0.456579   0.752066                 </div><div class="line">    3      0.456115   0.393354   0.801653                </div><div class="line">    4      0.408209   0.363914   0.818182                </div><div class="line">    5      0.370777   0.353467   0.834711                </div><div class="line">    6      0.342305   0.350941   0.842975 </div><div class="line"></div><div class="line">learn.fit(lr, 6, cycle_len=1, cycle_mult=2)</div><div class="line">epoch      trn_loss   val_loss   accuracy                </div><div class="line">    0      0.224649   0.351165   0.842975  </div><div class="line">    1      0.201187   0.343334   0.867769                </div><div class="line">    2      0.192907   0.339028   0.867769                </div><div class="line">    3      0.187865   0.32258    0.867769                </div><div class="line">    4      0.167363   0.309566   0.867769                </div><div class="line">    5      0.165586   0.302056   0.859504                </div><div class="line">    6      0.162697   0.303541   0.859504                </div><div class="line">    7      0.160678   0.301258   0.867769                </div><div class="line">    8      0.150494   0.315228   0.876033                </div><div class="line">    9      0.149012   0.333124   0.876033                </div><div class="line">    10     0.140085   0.341198   0.884298                </div><div class="line">    11     0.133135   0.343363   0.884298                </div><div class="line">    12     0.125423   0.339807   0.884298                </div><div class="line">    13     0.1168     0.33534    0.884298                </div><div class="line">    14     0.109273   0.33899    0.884298                </div><div class="line">    15     0.10801    0.32313    0.884298                </div><div class="line">    16     0.101856   0.313022   0.892562                </div><div class="line">    17     0.099126   0.29976    0.884298                 </div><div class="line">    18     0.094342   0.293067   0.884298                 </div><div class="line">    19     0.090559   0.291236   0.884298                 </div><div class="line">    20     0.089409   0.294657   0.884298                 </div><div class="line">    21     0.085061   0.292772   0.884298                 </div><div class="line">    22     0.080943   0.294916   0.884298                 </div><div class="line">    23     0.077687   0.289591   0.884298                 </div><div class="line">    24     0.073291   0.290864   0.884298                  </div><div class="line">    25     0.070136   0.289896   0.884298                  </div><div class="line">    26     0.071041   0.291556   0.876033                 </div><div class="line">    27     0.067812   0.287182   0.884298                  </div><div class="line">    28     0.06408    0.287058   0.884298                 </div><div class="line">    29     0.062913   0.288546   0.884298                  </div><div class="line">    30     0.060431   0.286025   0.884298                 </div><div class="line">    31     0.060556   0.284598   0.884298                 </div><div class="line">    32     0.058281   0.290405   0.884298                 </div><div class="line">    33     0.056919   0.295286   0.892562                  </div><div class="line">    34     0.054588   0.29396    0.900826                 </div><div class="line">    35     0.052521   0.292013   0.892562                 </div><div class="line">    36     0.051742   0.281408   0.892562                  </div><div class="line">    37     0.050915   0.274899   0.892562                  </div><div class="line">    38     0.048206   0.265904   0.892562                 </div><div class="line">    39     0.048089   0.2706     0.892562                 </div><div class="line">    40     0.045976   0.286523   0.892562                 </div><div class="line">    41     0.046062   0.297521   0.892562                  </div><div class="line">    42     0.043593   0.297748   0.900826                 </div><div class="line">    43     0.041344   0.293669   0.900826                 </div><div class="line">    44     0.040934   0.297795   0.900826                 </div><div class="line">    45     0.039792   0.300095   0.900826                 </div><div class="line">    46     0.038014   0.300615   0.900826                 </div><div class="line">    47     0.037288   0.298393   0.892562                 </div><div class="line">    48     0.037229   0.294151   0.900826                 </div><div class="line">    49     0.035728   0.290464   0.884298                 </div><div class="line">    50     0.034198   0.286805   0.884298                 </div><div class="line">    51     0.033855   0.286428   0.876033                 </div><div class="line">    52     0.032238   0.282124   0.884298                 </div><div class="line">    53     0.031438   0.276031   0.892562                 </div><div class="line">    54     0.031037   0.282506   0.876033                 </div><div class="line">    55     0.02959    0.285489   0.884298                 </div><div class="line">    56     0.028276   0.282334   0.892562                 </div><div class="line">    57     0.027054   0.278635   0.892562                 </div><div class="line">    58     0.025802   0.281353   0.892562                 </div><div class="line">    59     0.024861   0.282644   0.892562                 </div><div class="line">    60     0.023592   0.281519   0.892562                 </div><div class="line">    61     0.023124   0.283864   0.884298                 </div><div class="line">    62     0.022198   0.284992   0.892562</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">log_preds,y = learn.TTA()</div><div class="line">probs = np.mean(np.exp(log_preds),0)</div><div class="line">accuracy_np(probs, y)</div><div class="line">0.8925619834710744</div></pre></td></tr></table></figure><p>采用了 TTA（测试集也使用 Data Argumentation） 之后，最后的准确率达到了89.2%。</p><h1 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h1><h3 id="混淆矩阵（Confusion-Matrix）"><a href="#混淆矩阵（Confusion-Matrix）" class="headerlink" title="混淆矩阵（Confusion Matrix）"></a>混淆矩阵（Confusion Matrix）</h3><p>画出一个混淆矩阵——查看不同分类，识别错误的图片都有哪些？</p><p><img src="https://upload-images.jianshu.io/upload_images/452087-621fc190111f5c53.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Confusion Matrix"></p><p>看图可知</p><p>巴塞罗那队服：54张正确，6张错误。<br>巴塞尔队服：54张正确，7张错误。</p><p>下面我们看看具体哪些图片识别错了：</p><p><img src="https://upload-images.jianshu.io/upload_images/452087-d67f75a921cb63bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>第一行几张图片，判断错误还是有点奇怪的，因为图片本身有着巴塞罗那队的标志，标志人物梅西和队徽。也许是训练集还太小的缘故吧。</p><p>第二行判断错误的巴赛尔队服，第二张是异常图片，呈黑白色。其他三张与训练集里典型的巴赛尔队服还是有点区别的。这样也许解释得过去。</p><h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><p><a href="https://towardsdatascience.com/fun-with-small-image-data-sets-8c83d95d0159" target="_blank" rel="external">Fun with small image data-sets</a><br><a href="https://medium.com/@apiltamang/case-study-a-world-class-image-classifier-for-dogs-and-cats-err-anything-9cf39ee4690e" target="_blank" rel="external">Case Study: A world class image classifier for dogs and cats</a><br><a href="https://docs.fast.ai/" target="_blank" rel="external">fastai-doc</a></p><h1 id="changelog"><a href="#changelog" class="headerlink" title="changelog"></a>changelog</h1><p>2019.01.04 初稿<br>2019.04.05 删除时效图片，发布至博客 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#问题&lt;/p&gt;
&lt;p&gt;笔者最近在学人工智能领域的深度学习技术，在 fast.ai的课程里，我学会了：复用简洁的示例代码来训练卷积神经网络CNN。它能够精准地让机器对图片进行分类。（课程里的例子是识别猫狗图片的二元分类任务，在2000张测试图片中，它的识别准确率达到了99%。
      
    
    </summary>
    
    
      <category term="AI" scheme="https://adi0229.github.io/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>碎碎念之树状笔记</title>
    <link href="https://adi0229.github.io/2018/04/11/2018-04-11-workflowy/"/>
    <id>https://adi0229.github.io/2018/04/11/2018-04-11-workflowy/</id>
    <published>2018-04-10T16:54:57.000Z</published>
    <updated>2019-04-02T11:35:03.881Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Workflowy-VS-幕布"><a href="#Workflowy-VS-幕布" class="headerlink" title="Workflowy VS 幕布"></a>Workflowy VS 幕布</h1><p>这一年来，有幸接触开智学堂，参与开智的认知写作学课程，信息密度超大，受益良多，尤其是其中强调的“卡片大法”和“树形结构”，我一直念念不忘。</p><p>其中，阳老曾在博文中提到：</p><blockquote><p>我提过多次的 MIT 认知科学家 Joshua B. Tenenbaum 发表在 PNAS 的论文（ The discovery of structural form ）中，比较了抽象知识的不同表征结构……最终还是意识到，人类的最佳知识结构是树形结构。只有树形结构，才是最符合人类认知特点的一种结构，从树的上一层到下一层，是具备唯一通道，便于大脑将知识从记忆底层快速提取出来，符合人类大脑是个认知吝啬鬼的特点；树又是兼具横向扩展与纵向扩展能力的最优雅的结构。——<a href="http://www.yangzhiping.com/tech/zotero2.html" target="_blank" rel="external">Zotero（2）：作为知识管理工具的Zotero - 阳志平的网志</a></p></blockquote><p>过去用印象笔记，笔记越用越臃肿，认知超载，继而行动瘫痪。换工具，势在必行。</p><p>一周前，开始接触一款轻量级的笔记软件——Workflowy，一番试用过后，喜出望外，漫存笔记喜欲狂。电闪雷鸣，350条免费空间已然塞满。它正好满足了我想要践行“卡片大法”和“树形结构”的工具需求。</p><p>曾因 Workflowy 不能添加图片而纠结，国产版的同类产品幕布支持在笔记中添加图片，还能将笔记导出思维导图，又是一番产品试用，结果不遂人意。原因无他，幕布的多文档，或者说多画布模式，不符合打开即用的原则。每次打开幕布，需要在三个文档中选择，点击进去，再做笔记。经过这一步，我早已没有了输出欲望。</p><p>对此，我有一则 Workflowy 笔记在次为证：</p><blockquote><p>启动后的第一屏，幕布是多文档对应多个树状笔记。而Workflowy一个白板，清清爽爽，一进去就有敲敲打打码字的冲动。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Workflowy-VS-幕布&quot;&gt;&lt;a href=&quot;#Workflowy-VS-幕布&quot; class=&quot;headerlink&quot; title=&quot;Workflowy VS 幕布&quot;&gt;&lt;/a&gt;Workflowy VS 幕布&lt;/h1&gt;&lt;p&gt;这一年来，有幸接触开智学堂，参与开智
      
    
    </summary>
    
    
      <category term="data" scheme="https://adi0229.github.io/tags/data/"/>
    
  </entry>
  
  <entry>
    <title>拉新促活，了解一下？读《增长黑客》</title>
    <link href="https://adi0229.github.io/2017/09/04/2017-09-07-growthhacker/"/>
    <id>https://adi0229.github.io/2017/09/04/2017-09-07-growthhacker/</id>
    <published>2017-09-04T13:24:57.000Z</published>
    <updated>2018-04-07T17:54:25.353Z</updated>
    
    <content type="html"><![CDATA[<p>花了两个下午的时间，看完了同龄人范冰写的《增长黑客》，作者出书时，年纪轻轻，已是成绩斐然，他曾任职盛大创新院，担任「WiFi 万能钥匙」产品经理。</p><p>读完之后，对AARRR漏斗印象较深，书中有关增长黑客的工作，都是围绕着AARRR漏斗来开展的。</p><h2 id="何为增长黑客"><a href="#何为增长黑客" class="headerlink" title="何为增长黑客"></a>何为增长黑客</h2><p>与预想的不同，本书并不为难普通读者，并没有涉及繁杂的数据分析。整体行文较为友好，有IT科技媒体的风格。</p><p>作者简要地介绍了增长黑客的由来:</p><p>2012年4月，Andrew Chen发表了《Growth Hacker is the new VP Marketing》首次提出了增长黑客的概念。</p><p><img src="https://jobrest.gitbooks.io/growthhacking/content/assets/00005.jpeg" alt=""></p><p>在外行眼里，他们就像是极客、发明家和广告狂人的混合体。</p><p><img src="https://jobrest.gitbooks.io/growthhacking/content/assets/00006.jpeg" alt=""></p><p>这里的黑客，并不是一般常识所认为的，是入侵计算机系统，谋取不当利益的危险分子。黑客的含义，更多的是指不走寻常路的科技发烧友。</p><h2 id="AARRR漏斗"><a href="#AARRR漏斗" class="headerlink" title="AARRR漏斗"></a>AARRR漏斗</h2><p>产品增长是Growth Hacker的核心任务，根据不同阶段用户参与产品的行为，拆分成了 AARRR 转化漏斗，即Acquisition（获取用户）、Activation（激发活跃）、Retention（留存）、Revenue（收入）、Referral（口碑推荐传播）。对应着五个模块，书中列举了很多案例，不少提及的产品，当下活得并不好，比如作者参与过的“约TA”等。这说明了，一两个招式并不是整个产品生死的关键，只有产品符合PMF（Product&amp;Market Fit）的前提下，才适合谈增长。</p><p><img src="https://jobrest.gitbooks.io/growthhacking/content/assets/00007.jpeg" alt=""></p><h2 id="A-B测试"><a href="#A-B测试" class="headerlink" title="A/B测试"></a>A/B测试</h2><p>精细化地数据分析，根据数据来驱动增长，A/B测试是增长黑客的一大利器。书里提到了几个有意思的案例，体现了A/B测试得出的反常识结果</p><p>案例一：HubSpot注册表单页</p><p><img src="https://jobrest.gitbooks.io/growthhacking/content/assets/00113.jpeg" alt=""></p><p>营销公司HubSpot，在注册表单上增加了一位女性微笑的照片，以试图丰富页面和增加亲和度。但测试效果不符合效果，转化率降低了24％</p><p><img src="https://jobrest.gitbooks.io/growthhacking/content/assets/00114.jpeg" alt=""></p><p>案例二：奥巴马的竞选网站“Change”</p><p><img src="https://jobrest.gitbooks.io/growthhacking/content/assets/00115.jpeg" alt=""></p><p>原先，”Change”上呈现的选举视频，远不如奥巴马的全家福照片，后者对选举支持率的提升比前者高出40.6％</p><p>当然了，书里的阐述还是浅显，只是一笔带过。但是A/B测试通过对照试验，用数据验证假设，也是符合心理学的实验精神的，能减少主观偏见的影响。</p><h2 id="Talk-is-cheap，show-me-the-code"><a href="#Talk-is-cheap，show-me-the-code" class="headerlink" title="Talk is cheap，show me the code"></a>Talk is cheap，show me the code</h2><p>书中所讲的案例，涵盖面广，够典型，但阐述也略浅，属于有用之作。</p><p>纸上得来终觉浅，绝知此事要躬行。下一个5年，10年，也许AI会给产品带来变革，那AI时代的产品该如何增长呢？要回答这个问题，绝对不是看看案例，写点总结就能做到的。对我而言，还是要参与实战。</p><p>就像作者，虽然毕业没几年，但实战经验丰富，是一个创造者，比如，他从小学开始用 Dreamweaver 搭建网站，中学时编写共享软件被《大众软件》，大学开发塞班手机上的校园社区等等。</p><h2 id="问号：增长黑客的职业道德"><a href="#问号：增长黑客的职业道德" class="headerlink" title="问号：增长黑客的职业道德"></a>问号：增长黑客的职业道德</h2><p>在后记中，作者谈到了增长黑客需要遵守的职业道德。但在第3章《用数据抓取“借鸡下蛋”》小节里，他曾提及自己参与过交友产品“追TA”，团队在冷启动时，为了在社区中伪造真实用户，爬取了唱吧上用户分享的头像。</p><p>不知道这一举措，是否经过了版权方的允许？又如果版权方允许，书中介绍此法，是鼓励增长黑客们伪造“僵尸用户”？（值得注意的是，此款应用在2015年1月4日之后，在苹果商店中变不再更新，产品并没有火起来。虽然产品停更的主因，不该是由此引起的）</p><p>相反地，在第3章“获取用户”部分，作者提到了一个自相矛盾的“从最笨的事情做起”，比如Airbnb创始团队挨家挨户帮房东拍照，网易云协作团队邀请近百位意见领袖参与内测。</p><p>我更欣赏的是，“笨办法”获取用户。<br>让我们多一些真诚，少一些套路。</p><h2 id="一句金句"><a href="#一句金句" class="headerlink" title="一句金句"></a>一句金句</h2><p>促活，是做产品的重中之重，最后用一句书中引用的日本谚语来结束这篇读书笔记。</p><p>“鸟不鸣，信长杀之；鸟不鸣，秀吉使鸣之；鸟不鸣，家康待鸣之。”</p><p>注：文中图片引用自 gitbook，侵删。</p><h2 id="changelog"><a href="#changelog" class="headerlink" title="changelog"></a>changelog</h2><p>2017-09-02 添加行动卡和金句卡 0.5h<br>2017-08-31 初稿 2.5h</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;花了两个下午的时间，看完了同龄人范冰写的《增长黑客》，作者出书时，年纪轻轻，已是成绩斐然，他曾任职盛大创新院，担任「WiFi 万能钥匙」产品经理。&lt;/p&gt;
&lt;p&gt;读完之后，对AARRR漏斗印象较深，书中有关增长黑客的工作，都是围绕着AARRR漏斗来开展的。&lt;/p&gt;
&lt;h2 
      
    
    </summary>
    
    
      <category term="note" scheme="https://adi0229.github.io/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>【译】站在20岁的尾巴上</title>
    <link href="https://adi0229.github.io/2017/08/17/2015-07-31-20tail/"/>
    <id>https://adi0229.github.io/2017/08/17/2015-07-31-20tail/</id>
    <published>2017-08-17T04:14:57.000Z</published>
    <updated>2017-08-17T04:21:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>过去翻译的一个Quora回答，一次自我激励。<br>也是促成成长型心智的一小步。<br>可是，光有大方向可不行。还需要踩油门，而不是只在车上喊口号<br>——20170817</em></p><blockquote><p>Q：“I am in my late 20s and feel I have wasted a lot of time. Is it too late for me to achieve something worthwhile?</p></blockquote><p>现在，我站在在二十多岁的尾巴上，感觉浪费了很多时间。对我来说，去达成一些值得去做的事情，是不是已经太晚了？</p><blockquote><p>Tim MacGougan：</p><p>When I turned 27 I was:<br>Unemployed, had been for a year<br>Sleeping on a friend’s couch<br>Painfully single<br>Wondering if it was too late</p></blockquote><p>在我年满27岁时：</p><p>失业一年</p><p>睡朋友的沙发</p><p>痛苦的单身着</p><p>疑惑着是否一切都太晚了</p><blockquote><p>I had:<br>No hard skills<br>No work experience worth repeating<br>College grades that didn’t open grad school doors I wanted to walk through<br>Scant motivation<br>No direction</p></blockquote><p>我：</p><p>没有硬技能</p><p>没有值得一提的工作经历</p><p>大学成绩未能为我打开想要通过的毕业之门</p><p>缺乏动力</p><p>没有方向</p><blockquote><p>I asked my dad for advice and he said:”You can’t steer a parked car.”</p></blockquote><p>我向父亲寻求建议，他说：“ 你无法开动一辆停住的车”。</p><blockquote><p>I stopped thinking about what to do and started doing.  I refocused my search on small growing companies and after a dozen rejections I applied for a customer service job at a company I’d never heard of but that seemed interesting. A week later I was working atBonobos (company)with 25 smart, fun, engaging people. I chipped in on work in different departments and eventually found an application for my natural skills in a career path I hadn’t anticipated.  At 29 I’m a beginner in a new role.  It’s fantastic.</p></blockquote><p>我停止去想该做什么，开始行动。我重新聚焦于成长中的小型公司，然后，在许多次被拒之后，在一家没听说过但似乎挺有趣的公司，我申请了一份客户服务的工作。一周之后，我就任职于Bonnobos公司，与25位聪明、有趣、热心的伙伴一起工作了。我凑进不同的部门工作，终于，我使自己的天赋应用到了一个我未曾预料到的职业道路里。在29岁时，在新的角色里，我是一名初学者。这很神奇。</p><blockquote><p>I can only recommend what I’ve done:Find some fertile ground.You’ll figure the rest out later. There are tons of young companies looking for people who are energetic and capable, but most importantly they’re looking for people who care.  Startups require hard work and long hours but if you care about the mission and the quality of your work it’ll feel more like a lifestyle than a job.</p></blockquote><p><strong>我只能建议我所做过的：寻找某片肥沃的土壤。</strong></p><p>你自己会弄明白其他的。现在有大量的新兴企业在寻找有激情有能力的人，但最重要的是，他们要找的是真正在乎他们的人。创业公司需要长时间的勤奋工作。如果你在乎工作的使命和品质，那么，这会更像一种生活方式而不只是一份工作。</p><blockquote><p>You only have to be lucky once. I was. Maybe you will be too. There’s only one way to find out: Take the car out of park and step on the gas.</p></blockquote><p>你仅仅需要幸运一回。我曾经如此。也许，你也将如此。</p><p><strong>只有一种方法去寻找：把车开出泊位，踩上油门。</strong></p><p><a href="www.quora.com/I-am-in-my-late-20s-and-feel-I-have-wasted-a-lot-of-time-Is-it-too-late-for-me-to-achieve-something-worthwhile">原文链接</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;em&gt;过去翻译的一个Quora回答，一次自我激励。&lt;br&gt;也是促成成长型心智的一小步。&lt;br&gt;可是，光有大方向可不行。还需要踩油门，而不是只在车上喊口号&lt;br&gt;——20170817&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Q：“I am in my late 2
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>《国王，武士，祭司，情人》</title>
    <link href="https://adi0229.github.io/2017/08/04/2016-01-16-warrior/"/>
    <id>https://adi0229.github.io/2017/08/04/2016-01-16-warrior/</id>
    <published>2017-08-04T03:24:57.000Z</published>
    <updated>2017-08-04T03:50:10.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>旧笔记。做了一个思维导图。文字部分，摘抄为主。<br>若能提炼主题，用精炼文字自行叙述，更好。<br>回头看，四个人物原型的隐喻，鲜明而深刻。有趣的神话隐喻。<br>理论模型虽好，还需践行。</p></blockquote><div style="text-align: center"><br><img src="http://upload-images.jianshu.io/upload_images/452087-dcb80f2303484a55.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"><br></div><p><img src="http://ou1rce4mw.bkt.clouddn.com/kwml.png" alt=""></p><p><a href="http://ou1rce4mw.bkt.clouddn.com/kwml.png" target="_blank" rel="external">查看清晰大图</a></p><p><a href="http://www.jianshu.com/p/a98e4e67e39d" target="_blank" rel="external">笔记全文</a></p><p><a href="https://book.douban.com/subject/2893591/" target="_blank" rel="external">King, Warrior, Magician, Lover</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;旧笔记。做了一个思维导图。文字部分，摘抄为主。&lt;br&gt;若能提炼主题，用精炼文字自行叙述，更好。&lt;br&gt;回头看，四个人物原型的隐喻，鲜明而深刻。有趣的神话隐喻。&lt;br&gt;理论模型虽好，还需践行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div style
      
    
    </summary>
    
    
      <category term="note" scheme="https://adi0229.github.io/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>斯特鲁普效应统计报告</title>
    <link href="https://adi0229.github.io/2017/08/02/2017-08-04-stroop/"/>
    <id>https://adi0229.github.io/2017/08/02/2017-08-04-stroop/</id>
    <published>2017-08-02T07:54:57.000Z</published>
    <updated>2017-08-04T09:23:44.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="斯特鲁普效应统计报告"><a href="#斯特鲁普效应统计报告" class="headerlink" title="斯特鲁普效应统计报告"></a>斯特鲁普效应统计报告</h1><h2 id="背景信息"><a href="#背景信息" class="headerlink" title="背景信息"></a>背景信息</h2><p>在一个 Stroop （斯特鲁普）任务中，参与者得到了一列文字，每个文字都用一种油墨颜色展示。参与者的任务是将文字的打印颜色大声说出来。这项任务有两个条件：一致文字条件，和不一致文字条件。在一致文字条件中，显示的文字是与它们的打印颜色匹配的颜色词，如“红色”、“蓝色”。在不一致文字条件中，显示的文字是与它们的打印颜色不匹配的颜色词，如“紫色”、“橙色”。在每个情况中，我们将计量说出同等大小的列表中的墨色名称的时间。每位参与者必须全部完成并记录每种条件下使用的时间。</p><h2 id="调查问题"><a href="#调查问题" class="headerlink" title="调查问题"></a>调查问题</h2><ol><li>我们的自变量是什么？因变量是什么？</li><li>此任务的适当假设集是什么？你想执行什么类型的统计测试？为你的选择提供正当理由。</li></ol><h3 id="一、-我们的自变量是什么？因变量是什么？"><a href="#一、-我们的自变量是什么？因变量是什么？" class="headerlink" title="一、    我们的自变量是什么？因变量是什么？"></a>一、    我们的自变量是什么？因变量是什么？</h3><p><strong> 自变量：文字列表的显示条件,两组条件</strong></p><ul><li>一致文字条件：颜色词汇与打印颜色匹配</li><li>不一致文字条件：颜色词汇与打印颜色不匹配<br><strong> 因变量：参与者说出颜色词汇的反应时间 </strong></li></ul><h3 id="二、-此任务的适当假设集是什么？你想执行什么类型的统计测试？为你的选择提供正当理由。"><a href="#二、-此任务的适当假设集是什么？你想执行什么类型的统计测试？为你的选择提供正当理由。" class="headerlink" title="二、    此任务的适当假设集是什么？你想执行什么类型的统计测试？为你的选择提供正当理由。"></a>二、    此任务的适当假设集是什么？你想执行什么类型的统计测试？为你的选择提供正当理由。</h3><p>假设集：显示颜色词汇时，若语义和打印颜色不一致，不太一致的打印颜色对参与者识别词汇造成干扰</p><p>零假设：颜色词汇与打印颜色是否一致的条件，对参与者反应时间无影响<br>对立假设：向参与者呈现两组同等大小的词汇组，在面对不一致条件词汇组时，参与者说出文字打印颜色的反应时间比面对一致条件下的反应时间要长</p><ul><li><strong> 零假设 Ho: μ2 - μ1 = 0 </strong></li><li><strong>对立假设 Ha: μ2 - μ1 > 0   </strong><br>注：μ1为一致组总体均值，μ2为不一致组总体均值</li></ul><p><strong>测试类型：相依样本单尾t 检验，正方向</strong></p><p>理由：</p><ul><li>本次测试，由于无法得知总体参数，比较的是两个样本，样本数为24，小于30。</li><li>测试任务中，记录的是同一参与者在两种文字条件下朗读文字颜色的反应时间，属于重复衡量设计的样本内测试。所提供的数据，属于相依样本。</li><li><p>样本符合 t 检验所需的前提条件：</p><pre><code>- 自变量是二元变量（ A，B group）</code></pre><ul><li>因变量的测量单位是时间，是连续分布的（Continuous）</li><li>因变量（反应时间）之间是独立的，互相不受影响</li><li><p>样本差值近似正态分布</p><p>  <img src="http://ou1rce4mw.bkt.clouddn.com/st1.png" alt="st1"></p></li><li><p>参与者是随机选择的</p><h3 id="三、提供显示样本数据分布的一个或两个可视化。用一两句话说明你从图中观察到的结果。"><a href="#三、提供显示样本数据分布的一个或两个可视化。用一两句话说明你从图中观察到的结果。" class="headerlink" title="三、提供显示样本数据分布的一个或两个可视化。用一两句话说明你从图中观察到的结果。"></a>三、提供显示样本数据分布的一个或两个可视化。用一两句话说明你从图中观察到的结果。</h3></li></ul></li></ul><p><img src="http://ou1rce4mw.bkt.clouddn.com/st2.png" alt=""><img src="http://ou1rce4mw.bkt.clouddn.com/st3.png" alt=""></p><p>从直方图可知：<br>一致组的反应时间，9-17秒之间最多。<br>不一致组的反应时间，17-23秒最多。</p><h3 id="四、报告关于此数据集的一些描述性统计。包含至少一个集中趋势测量和至少一个变异测量。"><a href="#四、报告关于此数据集的一些描述性统计。包含至少一个集中趋势测量和至少一个变异测量。" class="headerlink" title="四、报告关于此数据集的一些描述性统计。包含至少一个集中趋势测量和至少一个变异测量。"></a>四、报告关于此数据集的一些描述性统计。包含至少一个集中趋势测量和至少一个变异测量。</h3><ul><li><strong>差异均值为7.96</strong></li><li><strong>差异的标准方差SD=4.86</strong></li></ul><h3 id="五、现在，执行统计测试并报告你的结果。你的置信水平和关键统计值是多少？你是否成功拒绝零假设？对试验任务得出一个结论。结果是否与你的期望一致？"><a href="#五、现在，执行统计测试并报告你的结果。你的置信水平和关键统计值是多少？你是否成功拒绝零假设？对试验任务得出一个结论。结果是否与你的期望一致？" class="headerlink" title="五、现在，执行统计测试并报告你的结果。你的置信水平和关键统计值是多少？你是否成功拒绝零假设？对试验任务得出一个结论。结果是否与你的期望一致？"></a>五、现在，执行统计测试并报告你的结果。你的置信水平和关键统计值是多少？你是否成功拒绝零假设？对试验任务得出一个结论。结果是否与你的期望一致？</h3><ol><li><p><strong>  t 值检验</strong><br> <strong>按照 a= .001 的标准，t 临界值是3.85</strong><br> <strong> t(23)=8.02,p \&lt; .0001,单尾正方向</strong><br> <strong> t 统计量为8.02，超过了 t 临界值。因此，均值差异有着极其显著的统计学意义。</strong><br> <strong> 由此可拒绝零假设。</strong></p></li><li><p><strong> 置信水平 </strong><br><strong> 99.9%CI= (4.50-11.42) </strong>，解释：总体差异的均值，有99.9%的概率在上述数值范围内。</p></li><li><p><strong> r^2= .74</strong> 解释：74%的反应时间差异，是由不一致的打印颜色条件造成的。</p></li></ol><h3 id="六、结论："><a href="#六、结论：" class="headerlink" title=" 六、结论："></a><strong> 六、结论：</strong></h3><p>  <strong>不一致的印刷颜色会对受试者识别颜色词汇造成干扰，延长朗读的反应时长。</strong></p><blockquote><p>参考:<br><a href="https://en.wikipedia.org/wiki/Stroop_effect" target="_blank" rel="external">https://en.wikipedia.org/wiki/Stroop_effect</a><br><a href="https://discussions.youdaxue.com/t/topic/43305" target="_blank" rel="external">https://discussions.youdaxue.com/t/topic/43305</a><br><a href="http://www.csic.cornell.edu/Elrod/t-test/t-test-assumptions.html" target="_blank" rel="external">http://www.csic.cornell.edu/Elrod/t-test/t-test-assumptions.html</a><br><a href="http://www.statisticshowto.com/when-to-use-a-t-score-vs-z-score/" target="_blank" rel="external">http://www.statisticshowto.com/when-to-use-a-t-score-vs-z-score/</a><br><a href="https://discussions.youdaxue.com/t/t/32258/8" target="_blank" rel="external">https://discussions.youdaxue.com/t/t/32258/8</a><br><a href="http://www.cnblogs.com/msdynax/p/6099574.html" target="_blank" rel="external">http://www.cnblogs.com/msdynax/p/6099574.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;斯特鲁普效应统计报告&quot;&gt;&lt;a href=&quot;#斯特鲁普效应统计报告&quot; class=&quot;headerlink&quot; title=&quot;斯特鲁普效应统计报告&quot;&gt;&lt;/a&gt;斯特鲁普效应统计报告&lt;/h1&gt;&lt;h2 id=&quot;背景信息&quot;&gt;&lt;a href=&quot;#背景信息&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="data" scheme="https://adi0229.github.io/tags/data/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://adi0229.github.io/2017/07/16/2017-07-16-flint/"/>
    <id>https://adi0229.github.io/2017/07/16/2017-07-16-flint/</id>
    <published>2017-07-16T11:22:57.000Z</published>
    <updated>2017-08-04T03:39:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="flint-can-blaze"><a href="#flint-can-blaze" class="headerlink" title="flint can blaze."></a>flint can blaze.</h1><p>Just trying some cool stuff in digital world.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;flint-can-blaze&quot;&gt;&lt;a href=&quot;#flint-can-blaze&quot; class=&quot;headerlink&quot; title=&quot;flint can blaze.&quot;&gt;&lt;/a&gt;flint can blaze.&lt;/h1&gt;&lt;p&gt;Just trying some
      
    
    </summary>
    
    
  </entry>
  
</feed>
